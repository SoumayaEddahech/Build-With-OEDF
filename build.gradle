/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples
 */
/*
 *  see also:
 *     https://docs.gradle.org/7.3.3/userguide/userguide.html
 *     https://docs.gradle.org/7.3.3/dsl/index.html
 */ 

import com.progress.gradle.abl.tasks.*

plugins {
    id 'base'              // Gives base tasks like build, assemble, check, clean...
    //id "org.sonarqube"   // Sonar support
    
    id 'distribution'      // for zip creation, etc.
    //https://docs.gradle.org/7.3.3/userguide/distribution_plugin.html#distribution_plugin
    
    id "com.dorongold.task-tree" // provides 'taskTree' task, which prints out task dependency trees
    //https://github.com/dorongold/gradle-task-tree
    
    id "progress.openedge.abl-base" // base ABL compilation tasks
    
    id "progress.openedge.abl"      // link with PDSOE
    
}

/*
use:
   println <variable> to 'debug' build configuration
        - println "message ${variable}"
        - println buildDir
        - println abl.openedgeVersion
*/

// https://docs.progress.com/bundle/openedge-devops-framework/page/ABLCompile.html
tasks.register("myABLCompile",ABLCompile){
    description "My Compile ABL"
     group "ablbase"
    
    println "OE version: ${openedgeVersion}"
    
    avmOptions {
        tty.enabled = 'true'
    }
    
    compileOptions {
    
        // if we're not producing debug code
        minSize.enabled = 'true'
        
        // helpful to identify r-code (specifically with Webclient)
        // GENERATE-MD5='true'
        
        strictOptions {
            requireFullNames="Error"
            requireFieldQualifiers="Error"
            requireFullKeywords="Ignore"
            requireReturnValues="Ignore"
        }
    }
    
    // "baseade" PL files will already be inclued
    propath("src","${abl.dlcHome}/tty/netlib/OpenEdge.Net.pl")
    
    source("src")
    include("**/*.p","**/*.cls")
    rcodeDir="bin"
}

// https://docs.progress.com/bundle/openedge-devops-framework/page/ABLUnit.html
tasks.register("myTestCases", ABLUnit){
    description "My ABL Unit Test Cases"
    group "ablbase"
    
    dependsOn myABLCompile
    
    // TODO: make a testcasecompile ablcompile task
    
    avmOptions {
        tty.enabled = true
    }
    
    arguments = [ 
        failOnError : true, 
        haltOnFailure: true 
    ]
        
    // include() - procedures and classes to include in the 'run'
    // exclude() - procedures and classes to exclude from the 'run'
    include("**/*.p","**/*.cls")

    // source()  - folder where source code is located, applied after include/exclude
    source("tests")
    
    // "baseade" PL files will already be inclued
    propath("tests", "src", "${abl.dlcHome}/tty/netlib/OpenEdge.Net.pl")
    
    // set wrkDir: for logging output
    wrkDir = "tests"
    
    // outputDir : where the results.xml will be
    outputDir = "tests"
    
    /*
    outputs.upToDateWhen {
        false
    }
    */
}

//check.dependsOn myTestCases
//assemble.dependsOn myABLCompile
